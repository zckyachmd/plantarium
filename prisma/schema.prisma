// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(100)
  description String?   @db.VarChar(255)
  varieties   Variety[] @relation("CategoryVarieties")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("categories")
}

model Taxonomy {
  id        Int       @id @default(autoincrement())
  kingdom   String    @db.VarChar(100)
  phylum    String    @db.VarChar(100)
  class     String    @db.VarChar(100)
  order     String    @db.VarChar(100)
  family    String    @db.VarChar(100)
  varieties Variety[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([kingdom, phylum, class, order, family])
  @@map("taxonomies")
}

model Variety {
  id             Int        @id @default(autoincrement())
  name           String     @unique
  scientificName String     @db.VarChar(100)
  description    String?    @db.VarChar(255)
  origin         String     @db.VarChar(100)
  synonyms       String[]
  genus          String     @db.VarChar(100)
  species        String     @db.VarChar(100)
  taxonomy       Taxonomy   @relation(fields: [taxonomyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taxonomyId     Int
  categories     Category[] @relation("CategoryVarieties")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@index([name, scientificName])
  @@map("varieties")
}
